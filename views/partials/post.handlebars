{{! Partial for a single post }}
<div class="post">
    <div class="post-avatar">
        <div class="user-info">
            <img src="/avatar/{{username}}" 
                alt="User Avatar" 
                class="header-avatar"> 
        </div>
    </div>
    <div class="post-content preserve-newlines">
        <!-- the post -->
        <h2>{{title}}</h2>
        <p>{{content}}</p>
        <div class="post-status-bar">
            <!-- everything that is shown in the status bar -->
            <!-- Heart = ♥ -->
            <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
            {{#ifCond user.username username}}
                <button class="delete-button" data-id="{{id}}" onclick="handleDeleteClick(event)"><i class="fas fa-trash-alt"></i></button>
            {{/ifCond}}
            {{#if user.likedPosts.[id]}}
                <button class="like-button" data-id="{{id}}" data-liked="true" onclick="handleLikeClick(event)">♥ {{likes}}</button>
            {{else}}
                <button class="like-button" data-id="{{id}}" data-liked="false" onclick="handleLikeClick(event)">♡ {{likes}}</button>
            {{/if}}
            <span>by {{username}} on {{timestamp}}</span>
        </div>        
    </div>
</div>
<script>
    function handleLikeClick(event) {
        const postId = event.target.getAttribute('data-id');
        const liked = event.target.getAttribute('data-liked') === 'true';

        fetch(`/like/${postId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ liked: !liked })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                event.target.textContent = data.liked ? `♥ ${data.likes}` : `♡ ${data.likes}`;
                event.target.setAttribute('data-liked', data.liked);
                event.target.classList.toggle('liked', data.liked);
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }

    function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.delete-button');
        const postId = buttonElement.getAttribute('data-id');        

        fetch(`/delete/${postId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                buttonElement.closest('.post').remove();
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }    
</script>
